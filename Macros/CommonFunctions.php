<?php

/*
 * This file is generated by S. Das.
 * Do not copy it without permission.
 */

//Contact at: tapan84silchar[at]gmail.com
function isInFileFormat($fileName, $format) {
    $revFileName = strrev($fileName);
    $revFileExt = substr($revFileName, 0, strlen($format));
    if (strtoupper(strrev($format)) == strtoupper($revFileExt)) {
        return TRUE;
    }
    return FALSE;
}

function changePasswd($pass, $pass1,$sec_ques_id, $sec_ques_ans) {
    $result='dfkgd';
    $table;
    session_start();
    $userName = $_SESSION['user_nm'];
    $userType=$_SESSION['user_type'];
    switch ($userType) {
        case 'fac':
            $table='advisor'; 
            break;
        case 'std':
            $table='student'; 
            break;
    }
    $old_pass_query="SELECT * FROM $table WHERE `user_nm` ='$userName'  ";
    $old_pass_row=mysql_fetch_array(mysql_query($old_pass_query));
    $old_pass=$old_pass_row['password_hashed'];
    if ((!preg_match(getPasswordPattern(), $pass )) || (!preg_match(getPasswordPattern(), $pass1 ))) {
        $result = "INVALID";
    }else if(md5($pass)!=$old_pass){
        // $result=$old_pass;
        $result="Current password not matched";
    } else {
        $password=md5($pass1);
        $sql = "UPDATE $table SET `security_question_id`='$sec_ques_id',`security_question_ans`='$sec_ques_ans',`password_hashed`='$password',`pass_changed`='YES',`pass_changed_at`='" . date("Y-m-d") . "',`last_modified_by`='" . $_SESSION['name'] . "[" . $userName . "]' WHERE `user_nm` ='$userName'";
        // $sql="UPDATE `%{$table}%` SET security_question_id='%{$sec_ques_id}%',security_question_ans='%{$sec_ques_ans}%',password_hashed='%{$password}%',pass_changed='YES' WHERE user_nm='%{$userName}%'";  
        //$sql = "UPDATE `student` SET  `security_question_id` =  '1' WHERE 1"; 
        $result = mysql_query($sql);

        if (mysql_affected_rows() >= 1) {
            $result = "DONE";
        } else {
            $result = "DB_ERROR";
        }
    }
    mysql_close($con);
    return $result;
}

function convertMySQLDateIntoPHP($mysqlDate) {
    $phpDate = "";
    $datePart = preg_split("/[-:\s]/", $mysqlDate);
    $phpDate = $datePart[2] . "-" . $datePart[1] . "-" . $datePart[0];
    return $phpDate;
}

function convertMySQLDateIntoPHPTime($mysqlDate) {
    $datePart = preg_split("/[-:\s]/", $mysqlDate);
    if (count($datePart) < 4) {
        $phpDate = mktime(0,0,0,$datePart[1], $datePart[2], $datePart[0]);
    } else {
        $phpDate = mktime($datePart[3], $datePart[4], $datePart[5], $datePart[1], $datePart[2], $datePart[0]);
    }
    return $phpDate;
}

function codeToMessage($code) 
    { 
        switch ($code) { 
            case UPLOAD_ERR_INI_SIZE: 
                $message = "The uploaded file exceeds the upload_max_filesize directive in php.ini"; 
                break; 
            case UPLOAD_ERR_FORM_SIZE: 
                $message = "The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form"; 
                break; 
            case UPLOAD_ERR_PARTIAL: 
                $message = "The uploaded file was only partially uploaded"; 
                break; 
            case UPLOAD_ERR_NO_FILE: 
                $message = "No file was uploaded"; 
                break; 
            case UPLOAD_ERR_NO_TMP_DIR: 
                $message = "Missing a temporary folder"; 
                break; 
            case UPLOAD_ERR_CANT_WRITE: 
                $message = "Failed to write file to disk"; 
                break; 
            case UPLOAD_ERR_EXTENSION: 
                $message = "File upload stopped by extension"; 
                break; 

            default: 
                $message = "Unknown upload error. May be pdf is not in correct format."; 
                break; 
        } 
        return $message; 
    } 
?>
